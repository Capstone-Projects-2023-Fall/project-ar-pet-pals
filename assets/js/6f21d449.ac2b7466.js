"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[2274],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>k});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var p=n.createContext({}),s=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=s(a),h=i,k=m["".concat(p,".").concat(h)]||m[h]||c[h]||r;return a?n.createElement(k,l(l({ref:t},u),{},{components:a})):n.createElement(k,l({ref:t},u))}));function k(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,l=new Array(r);l[0]=h;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[m]="string"==typeof e?e:i,l[1]=o;for(var s=2;s<r;s++)l[s]=a[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},5278:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>s});var n=a(7462),i=(a(7294),a(3905));const r={},l="API-Server Unit Tests",o={unversionedId:"test-procedures/api-server-unit-tests",id:"test-procedures/api-server-unit-tests",title:"API-Server Unit Tests",description:"Description",source:"@site/docs/test-procedures/api-server-unit-tests.md",sourceDirName:"test-procedures",slug:"/test-procedures/api-server-unit-tests",permalink:"/project-ar-pet-pals/docs/test-procedures/api-server-unit-tests",draft:!1,editUrl:"https://github.com/Capstone-Projects-2023-Fall/project-ar-pet-pals/edit/main/documentation/docs/test-procedures/api-server-unit-tests.md",tags:[],version:"current",lastUpdatedBy:"Hy Nguyen",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Acceptance Testing",permalink:"/project-ar-pet-pals/docs/test-procedures/acceptance-testing"}},p={},s=[{value:"Description",id:"description",level:2},{value:"Tests",id:"tests",level:2},{value:"Database connection",id:"database-connection",level:3},{value:"Verify Token",id:"verify-token",level:3},{value:"Authentication",id:"authentication",level:3},{value:"Create Pet",id:"create-pet",level:3},{value:"Pet Name",id:"pet-name",level:3},{value:"Pet Status",id:"pet-status",level:3},{value:"Pet Choice",id:"pet-choice",level:3},{value:"Food recognition",id:"food-recognition",level:3},{value:"Food health rating",id:"food-health-rating",level:3},{value:"Nutrition Information",id:"nutrition-information",level:3}],u={toc:s};function m(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"api-server-unit-tests"},"API-Server Unit Tests"),(0,i.kt)("h2",{id:"description"},"Description"),(0,i.kt)("p",null,"These are a series of unit tests meant for the backend that tests most of the routes on the api-server, and different situations that might occur."),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Capstone-Projects-2023-Fall/project-ar-pet-pals/blob/main/backend/src/unit.tests.ts"},"Code for these unit tests")),(0,i.kt)("h2",{id:"tests"},"Tests"),(0,i.kt)("h3",{id:"database-connection"},"Database connection"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"test database connection ",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Test whether the app can connect to the database")))),(0,i.kt)("h3",{id:"verify-token"},"Verify Token"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"verify true token "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Test whether or not the token validation works for a valid token"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"verify false token "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Test whether or not the token validation works for a invalid token")))),(0,i.kt)("h3",{id:"authentication"},"Authentication"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"valid sign in"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Test whether or not an already signed up user can sign in"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"invalid (no password) sign in"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Test whether a user can sign in with no password "))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"invalid (no username) sign in"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Test whether a user can sign in with no username "))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"valid sign up "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Test whether or not an new user can sign up"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"invalid (no password) sign up "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Test whether a user can sign up with no password"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"invalid (no username) sign up "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Test whether a user can sign up with no username"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"valid create pet"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Test whether a user can create a new pet")))),(0,i.kt)("h3",{id:"create-pet"},"Create Pet"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"invalid token create pet",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Test whether someone can create a pet with an invalid token")))),(0,i.kt)("h3",{id:"pet-name"},"Pet Name"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"get pet name"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Test whether or not a user can get his pet's name"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"invalid( invalid token) get pet name"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Test whether or not a user can get his pet's name with an invalid token"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"invalid( no pet created) get pet name "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Test whether or not a user can get his pet's name without having created a pet"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"set pet name"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Test whether or not a user can set his pet's name "))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"invalid ( invalid token) set pet name"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Test whether or not a user can set his pet's name with an invalid token"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"invalid ( no pet created) set pet name"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Test whether or not a user can set his pet's name without having created a pet")))),(0,i.kt)("h3",{id:"pet-status"},"Pet Status"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"get pet status"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Test whether or not a user can get his pet's health and happiness status"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"invalid( invalid token) get pet status"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Test whether or not a user can get his pet's health and happiness status with an invalid token"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"invalid( no pet created) get pet status"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Test whether or not a user can get his pet's health and happiness status without having created a pet"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"set pet status "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Test whether or not a user can set his pet's health and happiness status"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"invalid ( invalid token) set pet status "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Test whether or not a user san get his pet's health and happiness status with an invalid token"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"invalid ( no pet created) set pet status "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Test whether or not a user can set his pet's health and happiness status without having created a pet")))),(0,i.kt)("h3",{id:"pet-choice"},"Pet Choice"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"get pet choice "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Test whether or not a user can get his pet's choice"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"invalid( invalid token) get pet choice "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Test whether or not a user can get his pet's choice with an invalid token"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"invalid( no pet created) get pet choice "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Test whether or not a user can get his pet's choice without having created a pet"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"set pet choice"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Test whether or not a user can set his pet's choice"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"invalid ( invalid token) set pet choice"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Test whether or not a user san set his pet's choice with an invalid token "))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"invalid ( no pet created) set pet choice"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Test whether or not a user can set his pet's choice without having created a pet")))),(0,i.kt)("h3",{id:"food-recognition"},"Food recognition"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"recognize food in image"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Test whether or not it can recognize food in an image"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"invalid (bad image string) recognize food in image"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Test whether or not it can recognize food in an image with a bad image string"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"invalid (no image string) recognize food in image "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Test whether or not it can recognize food in an image with no image string provided")))),(0,i.kt)("h3",{id:"food-health-rating"},"Food health rating"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"get food's health rating"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Test whether or not it can get food's health rating"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"invalid (no food) get food's health rating"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Test whether or not it can get food's health rating with no food provided"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"invalid (invalid food) get food's health rating"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Test whether or not it can get food's health rating invalid food provided")))),(0,i.kt)("h3",{id:"nutrition-information"},"Nutrition Information"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"get food's nutrition info"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Test whether or not a user can get nutrition information"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"invalid (no food) get food's nutrition info"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Test whether or not a user can get nutrition information with no food name provided"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"invalid (invalid food) get food's nutrition info "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Test whether or not a user can get nutrition information with an invalid food name provided")))))}m.isMDXComponent=!0}}]);