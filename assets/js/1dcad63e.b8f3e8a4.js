"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[8968],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var p=a.createContext({}),c=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(p.Provider,{value:t},e.children)},l="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,s=e.mdxType,r=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),l=c(n),d=s,m=l["".concat(p,".").concat(d)]||l[d]||h[d]||r;return n?a.createElement(m,i(i({ref:t},u),{},{components:n})):a.createElement(m,i({ref:t},u))}));function m(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=n.length,i=new Array(r);i[0]=d;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[l]="string"==typeof e?e:s,i[1]=o;for(var c=2;c<r;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1639:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>l,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var a=n(7462),s=(n(7294),n(3905));const r={sidebar_position:3},i="Sequence Diagrams",o={unversionedId:"system-architecture/sequence-diagrams",id:"system-architecture/sequence-diagrams",title:"Sequence Diagrams",description:"Use case 2",source:"@site/docs/system-architecture/sequence-diagrams.md",sourceDirName:"system-architecture",slug:"/system-architecture/sequence-diagrams",permalink:"/project-ar-pet-pals/docs/system-architecture/sequence-diagrams",draft:!1,editUrl:"https://github.com/Capstone-Projects-2023-Fall/project-ar-pet-pals/edit/main/documentation/docs/system-architecture/sequence-diagrams.md",tags:[],version:"current",lastUpdatedBy:"Youfei Li",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"docsSidebar",previous:{title:"Components",permalink:"/project-ar-pet-pals/docs/system-architecture/components"},next:{title:"Algorithm Overview",permalink:"/project-ar-pet-pals/docs/system-architecture/algorithm-overview"}},p={},c=[{value:"Use case 2",id:"use-case-2",level:2},{value:"Use case 3",id:"use-case-3",level:2},{value:"Use case 4",id:"use-case-4",level:2},{value:"Use case 5",id:"use-case-5",level:2},{value:"Use case 6",id:"use-case-6",level:2},{value:"Use case 7",id:"use-case-7",level:2}],u={toc:c};function l(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"sequence-diagrams"},"Sequence Diagrams"),(0,s.kt)("h2",{id:"use-case-2"},"Use case 2"),(0,s.kt)("mermaid",{value:"sequenceDiagram\n    title Sequence Diagram 2\n\n    actor user\n\n    %% user->>+appstore: requests app\n    %% appstore--\x3e>-user: downloads and installs app\n\n    user->>APP: opens app\n    APP--\x3e>user: \"Welcome\"\n\n    user->>APP: creates an account\n    APP->>database: stores user's info.\n    database--\x3e>APP: returns new info.\n    APP--\x3e>user: shows updated information\n    Note left of user: Has not yet eaten\n\n    APP->>user: Sends notification to feed pet\n    user--\x3eAPP: Opens app\n    APP->>user: Display malnourished pet\n    Note left of user: Cooks chicken\n    user--\x3e>APP: shows chicken to camera\n    APP->>objectRecognition: shows user's video about food\n    objectRecognition--\x3e>APP: sends back the food's information\n    APP->>user: Displays food information\n    APP->>user: Asks if food was recognized properly\n    user--\x3e>APP: confirms food was recognized properly\n    APP->>database: improves pet's health to 100%\n    database--\x3e>APP: returns new pet info.\n    APP->>user: Encourages user for eating healthy\n"}),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"},"## Use Case 2- APP Helping User Make Healthier Food Choices\n1. A user is a works from home and is trying to improve their eating habits.\n2. User downloads ARPP to aid their nutrition goals and creates an account.\n3. User has been working for hours and has not eaten.\n4. User receives a notification from the app reminding them to feed their pet.\n5. User opens the app and sees their virtual pet sitting on their desk, looking very malnourished and weak.\n6. User cooks a chicken breast.\n7. User points the camera at its food and the app recognizes the food correctly, asking the user to verify.\n8. User taps a button to confirm that the food is correctly recognized.\n9. The virtual pet is now nourished and at100% health due to the high nutritional value of the chicken breast.\n10. The user is encouraged by their pets' happiness and continues to eat healthier meals.\n")),(0,s.kt)("h2",{id:"use-case-3"},"Use case 3"),(0,s.kt)("mermaid",{value:"sequenceDiagram\n    title Sequence Diagram 3\n\n    actor user\n    activate APP\n    activate database\n    APP->>database: Checks pet's status\n    database--\x3e>APP: Sends pet status\n\n    Note right of user: User does not login for a while\n\n    APP->>user: Sends notification about pet's status\n    user--\x3e>APP: logs in\n    APP->>user: \"welcome back\"\n    APP->>user: Displays pet that looks hyper\n    user--\x3e>APP: Clicks button to indicate starting activity\n\n    user->>APP: User walks\n    Note right of APP: App records steps with smartphone's sensor\n    user->>APP: Clicks button to end activity\n    APP->>database: Improves pet's status\n    database--\x3e>APP: Sends new status\n    APP--\x3e>user: Displays calmer pet\n    deactivate database"}),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"},"## Use Case 3- APP Helping User Keep Active\n1. A user is a software engineer working from home full time and has eaten but has not moved in a while due to several long morning zoom meetings.\n2. The user receives a notification from the app letting them know that their pet is in need of a walk.\n3. The user opens the app and sees their virtual pet in their room, looking very hyper and needing exercise. The pet\u2019s happiness bar is low.\n4. The user taps a button to indicate they are starting their activity.\n5. The user stands up and takes a walk down their hallway and back to their room.\n6. The app tracks the users steps using their smartphones built in hardware sensors.\n7. The user taps a button on the app to record their activity.\n8. The virtual pet is seen on screen in the users room visibly calmer/happier, and its health bar is at 100%.\n")),(0,s.kt)("h2",{id:"use-case-4"},"Use case 4"),(0,s.kt)("mermaid",{value:'sequenceDiagram\n    participant User as Corporate Employee\n    participant App as AR PetPal\n    participant LB as Leaderboard\n\n    App->>User: Notification: "Your pet wants to exercise!"\n    User->>App: Opens App and sees stretching animation\n    User->>User: Does a quick workout\n    App->>User: Signals pet\'s hunger\n    User->>App: Scans oatmeal with fruits\n    App->>User: Recognizes food. Ask for confirmation\n    User->>App: Confirms food\n    App->>LB: Update health status\n    LB->>User: Climb a few spots on the leaderboard'}),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"},"## Use Case 4 - Competitive Leaderboard\n1. A corporate employee who's been working from home due to recent global circumstances. With a sedentary lifestyle, they struggle to incorporate regular exercise into their daily routine.\n2. User wakes up to a notification: \"Your pet wants to exercise!\"\n3. User opens the app, sees the pet stretching, and does a quick workout.\n4. Post-workout, the pet signals it's hungry.\n5. User makes oatmeal with fruits and scans it with the app.\n6. App recognizes food, the user confirms, and the pet eats.\n7. Pet's health improves, and the user climbs a few spots on the leaderboard.\n")),(0,s.kt)("h2",{id:"use-case-5"},"Use case 5"),(0,s.kt)("mermaid",{value:'sequenceDiagram\n    participant User as Tech-Savvy User\n    participant App as AR PetPal\n\n    User->>App: Navigates to "Pet Personalization"\n    App->>User: Display customization options\n    User->>App: Types in new pet name\n    App->>User: Name updated\n    User->>App: Browses avatar collection\n    User->>App: Selects desired avatar\n    App->>User: Avatar updated\n    User->>App: Navigates to app settings\n    User->>App: Tweaks preferences\n    App->>User: Apply changes and showcase pet with new name and appearance'}),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"},'## Use Case 5 - Pet Personalization\n1. A tech-savvy user who enjoys personalizing digital platforms to reflect their preferences. They want their virtual pet to be unique and resonate with their style.\n2. User navigates to the "Pet Personalization" section in the app.\n3. User decides to give their pet a new name and types it in.\n4. User then browses through a collection of avatars, selecting the one they find most appealing.\n5. Wanting more control, the user goes into the app settings to tweak preferences to their liking.\n6. Upon finishing the customization, the app showcases the pet with its new name and appearance.\n')),(0,s.kt)("h2",{id:"use-case-6"},"Use case 6"),(0,s.kt)("mermaid",{value:'sequenceDiagram\n    participant User as College Student\n    participant App as AR PetPal\n\n    User->>App: Launches ARPetPals app\n    App--\x3e>User: Displays "Sign In" or "Sign Up" options\n    User->>App: Chooses "Sign Up" (for new users) or "Sign In" (for returning users)\n    Note over User,App: If "Sign Up"\n    User->>App: Provides necessary details to create account\n    App--\x3e>User: Account created successfully\n    Note over User,App: If "Sign In"\n    User->>App: Enters existing credentials\n    App--\x3e>User: Grants access to ARPetPals dashboard\n    User->>App: Navigates to settings menu\n    User->>App: Selects "Sign Out" option\n    App--\x3e>User: Confirms sign-out and returns to initial sign-in screen'}),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"},'## Use Case 6 - User Sign-In and Sign-Out\n1. A college student eager to engage with digital platforms in their leisure time. They want to securely access their ARPetPals account and ensure they can log out to protect their data.\n2. Upon launching the ARPetPals app, the user is greeted with options: "Sign In" or "Sign Up".\n3. If new to the platform, the user taps on "Sign Up", providing the necessary details to create their account.\n4. If returning, the user taps on "Sign In", entering their existing credentials to access the app.\n5. While enjoying their ARPetPals experience, the user decides to take a break and ensure their account is secure.\n6. Navigating to the settings menu, the user spots the "Sign Out" option and taps on it.\n7. The app confirms their sign-out.\n')),(0,s.kt)("h2",{id:"use-case-7"},"Use case 7"),(0,s.kt)("mermaid",{value:'\nsequenceDiagram\n    title Sequence Diagram 7\n\n    actor user\n\n    user->>APP: opens app\n    APP--\x3e>user: "Welcome"\n\n    user->>APP: aim camera at chair\n    APP->>objectRecognition: capture and transfer chair image data\n    objectRecognition->>+objectRecognition: process image data\n    objectRecognition--\x3e>APP: recognize chair\n    APP--\x3e>user: show comment "chair"\n\n    user->>APP: tap the chair\n    APP->>+APP: determine pet response\n    APP--\x3e>user: display the pet animation of running to the chair and sitting down'}),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"},"## Use Case 7- Environment Engagement\n1. A user is a work from home and wants to be entertained by how the virtual pet's interactions with the real world environment.\n2. The user opens ARPetPals app.\n3. The user aims the camera at a chair next to him.\n4. The app captures and transfers the chair's image data to the object recognition component.\n5. The object recognition component processes the image data, recognizes the chair, and send the result back to the app.\n6. The app informs the user the recognized object by displaying a comment \"chair.\"\n7. The user wants the virtual pet seated next to him.\n8. The user tap the chair.\n9. The app responds to the user by displaying an animation of the virtual pet running to the chair and sitting down.\n")))}l.isMDXComponent=!0}}]);