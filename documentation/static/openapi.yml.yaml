openapi: 3.0.2
info:
  title: Backend Server API

servers:
  - url: https://arpetpals.store/

tags:
  - name: User
    description: User Authentication and Management

  - name: Pet
    description: Pet Interaction and Management

  - name: Food
    description: Food Recognition and Analytics

  - name: Leaderboard
    description: Configuring the User Leaderboard
    
  
paths:
  # User Routes
  /api/signin:
    post:
      tags:
        - User
      
      summary: "Sign In"
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string

      responses:
        '200':
          description: Success
          content:  
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: User ID
                  name:
                    type: string
                    description: Username

        '400':
          description: Failure
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fail"
  
  /api/signup:
    post:
      tags:
        - User

      summary: "Sign Up"
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string

      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: User ID
                  name:
                    type: string
                    description: Username
                  dailyStepGoal:
                    type: string
                    description: User's Daily Step Goal

        '400':
          description: "Failure"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fail"
  
  /api/token/verify:
    post:
      tags:
        - User

      summary: "Validate User Token"

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  string: User Token

      responses:
        '200':
          description: "Success"
          content:
            application/json:
            schema:
              type: object
              properties:
                isValid:
                  type: boolean

        '400':
          description: "Failure"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fail"
  
  # Pet Routes
  /api/pet/name:
    get:
      security: 
        - token: []

      tags:
        - Pet 

      summary: "Get Pet Name"
      
      requestBody:
        description: "User ID is provided in the request headers."
        required: true
  
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: Pet Name

        '400':
          description: "Failure"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fail"                    

    post:
      security: 
        - token: []

      tags:
        - Pet

      summary: "Update Pet Name"

      requestBody:
        required: true
        description: "User ID is provided in the request headers."
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Updated Pet Name
      
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Pet name updated successfully.
      
        '400':
          description: "Failure"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fail"

  /api/pet/create:
    post:
      security: 
        - token: []
      tags:
        - Pet
      summary: "Create a new pet"
      responses:
        '200':
          description: "Created pet name successfuly"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PetCreationSchema"
        '400':
          description: "Could not create pet"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fail"

  /api/pet/status:
    post:
      security: 
        - token: []
      tags:
        - Pet
      summary: "Update pet status e.g. health, mood,..."
      requestBody:
        description: "The new pet's status"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PetStatusRequestBody"
      responses:
        '200':
          description: "Updated pet status successfuly"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
        '400':
          description: "Could not update pet status"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fail"
    get:
      security: 
        - token: []
      tags: 
        - Pet
      summary: "Get pet status"
      responses:
        '200':
          description: "Got pet status successfuly"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PetStatusSchema"
        '400':
          description: "Could not get pet status"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fail"

  /api/pet/status/reset:
    post:
      security: 
        - token: []
      tags:
        - Pet
      summary: "Reset pet status"
      requestBody:
        description: "0: Reset All, 1: Reset Health, 2: Reset Mood"
        content:
          application/json:
            schema:
                $ref: "#/components/schemas/PetStatusResetRequestBody"
      responses:
        '200':
          description: "Reset pet status successfuly"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
        '400':
          description: "Could not reset pet status"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fail"

  /api/pet/status/increaseMood:
    put:
      tags:
        - Pet
  
  /api/pet/activities/reset:
    put:
      tags:
        - Pet
  
  /api/pet/choice:
    post:
      security: 
        - token: []
      tags:
        - Pet
      summary: "update pet choice"
      requestBody:
        description: "The new pet's choice"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PetChoice"
      responseBody:
        description: "status of update"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Status"
      responses:
        '200':
          description: "Updated pet choice successfuly"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
        '400':
          description: "Could not update pet choice"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fail"
    get:
      security: 
        - token: []
      tags: 
        - Pet
      summary: "get pet choice"
     
      responseBody:
        description: "the pet choice"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PetChoice"
      responses:
        '200':
          description: "Got pet choice successfuly"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PetChoice"
        '400':
          description: "Could not get pet choice"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fail"

  # Food Routes
  /api/food/recognize:
    post:
      tags:
        - Food

  /api/food/healthRating:
    post:
      tags:
        - Food

  # Leaderboard Routes
  /api/leaderboard/list:
    get:
      tags:
      - Leaderboard
  

components:
  securitySchemes:
    token:            
      type: http
      scheme: bearer
      bearerFormat: JWT   
  
  schemas:
    PetStatus:
      type: object
      properties:
        health: int

    PetChoice:
      type: object
      properties:
        choice: string

    VerifyToken:
      type: object
      properties:
        token: 
          type: string
    
    TokenValid:
      type: object
      properties:
        isValid: 
          type: boolean

    UserInfo:
      type: object
      properties:
        id: 
          type: string
        name: 
         type: string

    AuthSuccess:
      type: object
      properties:
        token: 
          type: string
          description: "the auth token"
        userInfo:
          type: object
          $ref: "#/components/schemas/UserInfo"
    
    Fail:
      type: object
      properties:
        message:
          type: string
          description: Reason for Failure

    Status:
      type: object
      properties:
        message: 
          type: string
          description: status

    UserInterfaceLayout:
      type: object
      properties:
        layoutId:
          type: string
          description: "ID of the UI layout."
        components:
          type: array
          items:
            type: string
          description: "Components present in the UI layout."

    UserInputDetails:
      type: object
      properties:
        inputType:
          type: string
          description: "Type of user input."
        inputValue:
          type: string
          description: "Value of the user input."

    NotificationDetails:
      type: object
      properties:
        notificationType:
          type: string
          description: "Type of notification."
        message:
          type: string
          description: "Message content of the notification."

    LeaderboardDetails:
      type: object
      properties:
        rank:
          type: array
          items:
            $ref: "#/components/schemas/UserRank"
          description: "List of users and their rankings."

    UserRank:
      type: object
      properties:
        userId:
          type: string
          description: "ID of the user."
        score:
          type: integer
          description: "User's score on the leaderboard."

    ExerciseReminderDetails:
      type: object
      properties:
        reminderMessage:
          type: string
          description: "Message for the exercise reminder."

    PetStatusRequestBody:
      type: object
      properties:
        health:
          type: number
          description: "Pet's health (optional)"
        mood:
          type: number
          description: "Pet's mood (optional)"

    PetStatusResetRequestBody:
      type: object
      properties:
        reset_type:
          type: integer
          description: "0: Reset All, 1: Reset Health, 2: Reset Mood"
      required: [reset_type]

    PetStatusExtraSchema:
      type: object
      properties:
        minutes_since_last_feeding:
          type: number
          description: "Minutes since last feeding"
        minutes_since_last_activity:
          type: number
          description: "Minutes since last activity"

    PetStatusSchema:
      type: object
      properties:
        health:
          type: number
          description: "Pet's health"
        mood:
          type: number
          description: "Pet's mood"
        extra: 
          type: object
          $ref: "#/components/schemas/PetStatusExtraSchema"
    
    PetInfoSchema:
      type: object
      properties:
        id:
          type: string
          description: "Pet's id"
        name:
          type: string
          description: "Pet's name"
        status:
          type: object
          $ref: "#/components/schemas/PetStatusSchema"
    
    PetCreationSchema:
      type: object
      properties:
        message:
          type: string
          description: "successful message"
        petInfo:
          type: object
          $ref: "#/components/schemas/PetInfoSchema"

    

    