openapi: 3.0.2
info:
  title: Backend Server API

servers:
  - url: https://arpetpals.store/

tags:
  - name: User
    description: User Authentication and Management

  - name: Pet
    description: Pet Interaction and Management

  - name: Food
    description: Food Recognition and Analytics

  - name: Leaderboard
    description: Configuring the User Leaderboard
    
paths:
  # User Routes
  /api/signin:
    post:
      tags:
        - User
      
      summary: "Sign In"
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string

      responses:
        '200':
          description: Success
          content:  
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                    description: User ID
                  name:
                    type: string
                    description: Username

        '400':
          description: Failure
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fail"
  
  /api/signup:
    post:
      tags:
        - User

      summary: "Sign Up"
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string

      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                    description: User ID
                  name:
                    type: string
                    description: Username
                  dailyStepGoal:
                    type: object
                    description: User's Daily Step Goal

        '400':
          description: "Failure"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fail"
  
  /api/token/verify:
    post:
      tags:
        - User

      summary: "Validate User Token"

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  string: User Token

      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  isValid:
                    type: boolean

        '400':
          description: "Failure"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fail"
  
  /api/user:
    get:
      security: 
        - token: []

      tags:
        - User

      summary: "Get User Info"

      requestBody:
        description: "User ID is provided in the request headers."
        required: true

      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  userInfo:
                    type: object
                    properties:
                      id:
                        type: number
                        description: User ID
                      name:
                        type: string
                        description: Username
        
        '400':
          description: "Failure"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fail"

    put:
      security: 
        - token: []

      tags:
        - User

      summary: "Update User"

      requestBody:
        description: "User ID is provided in the request headers."
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: User Name
                password:
                  type: string
                  description: Password

      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success Message

        '400':
          description: "Failure"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fail"
    
    delete:
      security: 
        - token: []

      tags:
        - User

      summary: "Delete User"

      requestBody:
        description: "User ID is provided in the request headers."
        required: true

      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success Message

        '400':
          description: "Failure"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fail"

  /api/user/step-count:
    put:
      security:
        - token: []

      tags:
        - User

      summary: "Update Step Count"

      requestBody:
        description: "User ID is provided in the request headers."
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: number
                  description: User ID
                steps:
                  type: number
                  description: Step Count

      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success Message
        
        '400':
          description: "Failure"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fail"
  
    get:
      security:
        - token: []

      tags:
        - User

      summary: "Check Step Count"

      requestBody:
        description: "User ID is provided in the request headers."
        required: true

      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  dailyStepCount:
                    type: number
                  weeklyStepCount:
                    type: number
        
        '400':
          description: "Failure"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fail"

  /api/user/step-goal:
    put:
      security: 
        - token: []

      tags:
        - User

      summary: "Update User's Step Goal"

      requestBody:
        description: "User ID is provided in the request headers."
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dailyStepGoal:
                  type: number
                  description: Daily Step Goal

      responses:
        '404':
          description: "Failure"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: User not found.

        '500':
          description: "Failure"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Failed to update step goal.

        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Step goal updated successfully.

  /api/user/check-step-goal:
    get:
      security: 
        - token: []

      tags:
        - User

      summary: "Check User's Step Goal"

      requestBody:
        description: "User ID is provided in the request headers."
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: number
                  description: User ID
                steps:
                  type: number
                  description: User's Steps

      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: boolean
                description: Whether the user met the step goal.
        
        '400':
          description: "Failure"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fail"

  /api/user/reset-daily-step-count:
    get:
      tags:
        - User

      summary: "Reset Daily Step Counter for All Users"

      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success Message

        '400':
          description: "Failure"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fail"

  /api/user/reset-weekly-step-count:
    get:
      tags:
        - User

      summary: "Reset Weekly Step Counter for All Users"

      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success Message

        '400':
          description: "Failure"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fail"

  /api/user/savebirthday:
    post:
      security: 
        - token: []

      tags:
        - User

      summary: "Set User's Birthday"

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                birthday:
                  type: string

      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success Message
                  userInfo:
                    type: object
                    properties:
                      name:
                        type: string
                      birthday:
                        type: string
        
        '400':
          description: "Failure"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fail"



  # Pet Routes
  /api/pet/name:
    get:
      security: 
        - token: []

      tags:
        - Pet 

      summary: "Get Pet Name"
      
      requestBody:
        description: "User ID is provided in the request headers."
        required: true
  
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: Pet Name

        '400':
          description: "Failure"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fail"                    

    put:
      security: 
        - token: []

      tags:
        - Pet

      summary: "Update Pet Name"

      requestBody:
        required: true
        description: "User ID is provided in the request headers."
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Updated Pet Name
      
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Pet name updated successfully.
      
        '400':
          description: "Failure"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fail"

  /api/pet/create:
    post:
      tags:
        - Pet

      security: 
        - token: []
      
      summary: "Create a New Pet"

      requestBody:
        description: "User ID is provided in the request headers."
        required: true

      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success Message
                  petInfo:
                    type: object
                    properties:
                      id:
                        type: number
                        description: Pet ID
                      name:
                        type: string
                        description: Pet Name
                      status:
                        type: object
                        properties:
                          health:
                            type: number
                          mood:
                            type: number

        '400':
          description: "Failure"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fail"

  /api/pet/status:
    get:
        tags: 
          - Pet
        
        security: 
          - token: []
        
        summary: "Get Pet's Status"

        requestBody:
          description: "User ID is provided in the request headers."
          required: true

        responses:
          '200':
            description: "Success"
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    health:
                      type: number
                    mood:
                      type: number
                    extra:
                      type: object
                      properties:
                        minutes_since_last_feeding:
                          type: number
                        minutes_since_last_activity:
                          type: number
                    activities:
                      type: array

          '400':
            description: "Failure"
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Fail"

    put:
      tags:
        - Pet

      security: 
        - token: []

      summary: "Update Pet Status"

      requestBody:
        description: "User ID is provided in the request headers."
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                health:
                  type: number
                mood:
                  type: number

      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success Message
                  health:
                    type: number
                  mood:
                    type: number

        '400':
          description: "Failure"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fail"

  /api/pet/status/reset:
    put:
      tags:
        - Pet

      security: 
        - token: []

      summary: "Reset the Pet's Status"

      requestBody:
        description: "User ID is provided in the request headers."
        required: true
        content:
          application/json:
            schema:
                type: object
                properties:
                  reset_type:
                    type: number
                    description: "ENUM - 0: ALL, 1: HEALTH, 2: MOOD"

      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success Message

        '400':
          description: "Failure"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fail"

  /api/pet/status/increaseMood:
    put:
      tags:
        - Pet

      security: 
        - token: []

      summary: "Increase the Pet's Mood"

      requestBody:
        description: "User ID is provided in the request headers."
        required: true
        content:
          application/json:
            schema:
                type: object
                properties:
                  type:
                    type: string
                    description: Activity Type
      
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success Message
                  mood:
                    type: number
                  activities:
                    type: array

        '400':
          description: "Failure"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fail"

  /api/pet/activities/reset:
    post:
      tags:
        - Pet

      security: 
        - token: []

      summary: "Reset the Pet's Activities"
      description: Run as a Cron Job.
      
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success Message
                  matchedCount:
                    type: number
                  modifiedCount:
                    type: number

        '400':
          description: "Failure"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fail"
  
  /api/pet/choice:
    get:
      tags: 
        - Pet

      security: 
        - token: []

      summary: "Get Pet Choice"

      requestBody:
        description: "User ID is provided in the request headers."
        required: true

      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  choice:
                    type: string
                    description: Pet Choice
                
        '400':
          description: "Failure"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fail"
  
    put:
      tags:
        - Pet

      security: 
        - token: []

      summary: "Update Pet Choice"

      requestBody:
        description: "User ID is provided in the request headers."
        required: true
        content:
          application/json:
            schema:
                type: object
                properties:
                  choice:
                    type: string
                    description: Choice

      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success Message

        '400':
          description: "Failure"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fail"

  /api/pet/feed:
    put:
      tags:
        - Pet

      security: 
        - token: []

      summary: "Feed Pet"

      requestBody:
        description: "User ID is provided in the request headers."
        required: true
        content:
          application/json:
            schema:
                type: object
                properties:
                  food:
                    type: string
                    description: Food

      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success Message

        '400':
          description: "Failure"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fail"

  /api/pet:
    delete:
      tags:
        - Pet

      security: 
        - token: []

      summary: "Delete Pet"

      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success Message

        '400':
          description: "Failure"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fail"

  /api/checkAccountActivity:
    get:
      tags: 
        - Pet

      security: 
        - token: []

      summary: "Check Account Activity -- Pet"

      requestBody:
        description: "User ID is provided in the request headers."
        required: true

      responses:
        '400':
          description: "Failure"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fail"


  # Food Routes
  /api/food/recognize:
    post:
      tags: 
        - Food

      security: 
        - token: []

      summary: "Recognize Food"

      requestBody:
        description: "User ID is provided in the request headers."
        required: true

      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  topMatches:
                    type: array
                    description: Top Potential Food Matches
                
        '400':
          description: "Failure"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fail"

  # Implement Function
  # /api/food/healthRating:
  #   post:
  #     tags:
  #       - Food
      
  #     security: 
  #       - token: []


  # Leaderboard Routes

  /api/leaderboard/list:
    get:
        tags: 
          - Leaderboard
        
        security: 
          - token: []
        
        summary: "Get Leaderboard list - top 5 users' activities"

        requestBody:
          description: "User ID is provided in the request headers."
          required: true

        responses:
          '200':
            description: "Success"
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    leaderboardList:
                      type: array
                      items:
                        properties:
                          username:
                            type: number
                          score:
                            type: number

          '400':
            description: "Failure"
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Fail"
  

components:
  schemas:
    Fail:
      type: object
      properties:
        message:
          type: string
          description: Reason for Failure


